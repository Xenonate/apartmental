You got <%= @addresses.count %> results!


<!DOCTYPE html>
<html>
<head>

  <meta charset=utf-8 />
  <title>Markers as links</title>
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
  <script src='https://api.mapbox.com/mapbox.js/v2.2.3/mapbox.js'></script>
  <link href='https://api.mapbox.com/mapbox.js/v2.2.3/mapbox.css' rel='stylesheet' />
  <style>
  body { margin:0; padding:0; }
  #map { position:absolute; top:0; bottom:0; right:0; width:40%; }
  </style>
</head>
<body>


  <div id='map'></div>
  <div id='results'></div>

  <div id="poop">
    <% @addresses.each do |address| %>
    <table>
      <tr>

        <td><a class='item' href="#"><%= address.street_number %> <%= address.street_name %> </a>Your average rent price is predicted to be $<%= address.rental_average(@length_of_stay) %> over <%= @length_of_stay %> years </td>
      </tr>
      <table>
    <% end %>
  </div>
  <script>
  L.mapbox.accessToken = 'pk.eyJ1IjoicmljZWI1MyIsImEiOiJjaWg2aHRxcXAwYzYxdWpseHUwemloZ3gyIn0.wmQAtxnSiqgcwz1-66cypQ';
  var map = L.mapbox.map('map', 'mapbox.streets')
  .setView([37.7570841,-122.45], 12);

  var myLayer = L.mapbox.featureLayer().addTo(map);
  // var geoJson = []
myLayer.setGeoJSON([
  <% @addresses.each do |address| %>
      {
      type: 'Feature',
      "geometry": { "type": "Point", "coordinates": [<%= address.long %>, <%= address.lat %>]},
      "properties": {
        title: "<%= address.street_number %>" + ' '  + "<%= address.street_name %>" + ' ' + "<%= address.street_type %>",
        description: 'Your average rent price is predicted to be $<%= address.rental_average(@length_of_stay) %> over <%= @length_of_stay %> years ',
        "className": "poopie",
        "url": "<%= address.listing_url %>",
        "marker-symbol": "star",
        "marker-color": "#ff8888",
        "marker-size": "large",
        "marker-id": "marker-hello",
        "city": "<%= address.street_number %>" + ' '  + "<%= address.street_name %>" + ' ' + "<%= address.street_type %>",
        "image": "<%= address.image_url %>"
      }
    },
  <% end %>
]);
// Add custom popups to each using our custom feature properties
// myLayer.on('layeradd', function(e) {
//   var marker = e.layer,
//   feature = marker.feature;

//     // Create custom popup content
//     var popupContent =  '<a target="_blank" class="popup" href="' + feature.properties.url + '">' +
//     '<img width="100" height="100" src="' + feature.properties.image + '" />' + "<br>" +
//     feature.properties.city +
//     '</a>';

//     // http://leafletjs.com/reference.html#popup
//     marker.bindPopup(popupContent,{
//       closeButton: false,
//       minWidth: 320
//     });
//   });

// // Add features to the map
// myLayer.setGeoJSON(geoJson);

// myLayer.on('mouseover', function(e) {
//   e.layer.openPopup();
//   $('body').css("background-color", "red");
// });

var info = document.getElementById('poop');
console.log(info)

myLayer.eachLayer(function(marker) {
  var link = info.appendChild(document.createElement('a'));
  link.className = 'item';
  link.href = '#';

  // Populate content from each markers object.
  link.innerHTML = marker.feature.properties.title +
    '<br /><small>' + marker.feature.properties.description + '</small>';
  link.onclick = function() {
    if (/active/.test(this.className)) {
      this.className = this.className.replace(/active/, '').replace(/\s\s*$/, '');
    } else {
      var siblings = info.getElementsByTagName('a');
      for (var i = 0; i < siblings.length; i++) {
        siblings[i].className = siblings[i].className
          .replace(/active/, '').replace(/\s\s*$/, '');
      };
      this.className += ' active';

      // When a menu item is clicked, animate the map to center
      // its associated marker and open its popup.
      map.panTo(marker.getLatLng());
      marker.openPopup();
    }
    return false;
  };
});



</script>







